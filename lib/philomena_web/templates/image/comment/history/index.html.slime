h1
  ' Viewing history for comment by
  = render PhilomenaWeb.UserAttributionView, "_anon_user.html", object: @comment, conn: @conn
  ' on image
  a href=~p"/images/#{@comment.image}"
    | #
    = @comment.image_id

h2 Current version
= render PhilomenaWeb.CommentView, "_comment.html", comment: @comment, body: @body, conn: @conn

h2 Previous versions
= for {version, body} <- @versions do
  - comment = merge_version(@comment, version)

  article.block.communication
    .block__content.flex.flex--no-wrap
      .flex__fixed.spacing-right
        = render PhilomenaWeb.UserAttributionView, "_anon_user_avatar.html", object: comment, conn: @conn

      .flex__grow.communication__body
        span.communication__body__sender-name = render PhilomenaWeb.UserAttributionView, "_anon_user.html", object: comment, awards: true, conn: @conn
        br

        = render PhilomenaWeb.UserAttributionView, "_anon_user_title.html", object: comment, conn: @conn

        .communication__body__text
          = body

    .block__content.communication__options
      .flex.flex--wrap.flex--spaced-out
        div
          = cond do
            - version.index > 1 and comment.edit_reason not in [nil, ""] ->
              ' Reason:
              = comment.edit_reason
            - version.index > 1 ->
              ' No reason given
            - true ->
              ' Original

        .flex__right
          = if version.index == 1 do
            ' Created
          - else
            ' Edited
          => pretty_time(version.created_at)
          ' by
          => render PhilomenaWeb.UserAttributionView, "_anon_user.html", object: comment, conn: @conn
