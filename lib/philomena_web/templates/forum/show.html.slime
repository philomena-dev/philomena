- pagination = render PhilomenaWeb.PaginationView, "_pagination.html", page: @topics, route: fn p -> ~p"/forums/#{@forum}?#{p}" end

h1 = @forum.name
.block
  .block__header
    => link("Forums", to: ~p"/forums")
    ' &raquo;
    => link(@forum.name, to: ~p"/forums/#{@forum}")
    a href=~p"/forums/#{@forum}/topics/new"
      i.fa.fa-fw.fa-edit>
      ' New Topic

    a href=~p"/posts?#{[pq: "forum:#{@forum.short_name}"]}"
      i.fa.fa-fw.fa-search>
      ' Search Posts
    span.spacing-left
      => @forum.topic_count
      ' topics
  .block__header--sub.block__header--light.page__header
    .page__pagination = pagination
    .page__info
      span.block__header__title = @forum.description
      = render PhilomenaWeb.Forum.SubscriptionView, "_subscription.html", forum: @forum, watching: @watching, conn: @conn
  .block__content
    table.table.table--communication-list
      thead
        tr
          th.table--communication-list__name Topic
          th.table--communication-list__stats.hide-mobile Posts
          th.table--communication-list__last-post Last Post
      tbody
        = for topic <- @topics do
          tr
            td.table--communication-list__name
              = if topic.sticky do
                i.fa.fa-thumbtack
              = if topic.locked_at do
                i.fa.fa-lock
              = if topic.poll do
                i.fas.fa-poll-h
              =< link(topic.title, to: ~p"/forums/#{@forum}/topics/#{topic}")
              .small-text
                ' Posted
                => pretty_time(topic.created_at)
                ' by
                = render PhilomenaWeb.UserAttributionView, "_anon_user.html", object: topic, conn: @conn
            td.table--communication-list__stats.hide-mobile = topic.post_count
            td.table--communication-list__last-post
              = if topic.last_post do
                => link("Go to post", to: ~p"/forums/#{topic.forum}/topics/#{topic}?#{[post_id: topic.last_post]}" <> "#post_#{topic.last_post.id}")
                ' by
                = render PhilomenaWeb.UserAttributionView, "_anon_user.html", object: topic.last_post, conn: @conn
                br
                => pretty_time(topic.last_post.created_at)
  .block__header.block__header--light.page__header
    .page__pagination = pagination

/- if current_user
/  = render partial: 'topics/form'
