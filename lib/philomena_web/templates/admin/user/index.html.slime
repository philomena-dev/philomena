h1 Users

= form_for :user, ~p"/admin/users", [method: "get", class: "hform"], fn f ->
  .field
    => text_input f, :uq, name: :uq, value: @conn.params["uq"], class: "hform__text input", placeholder: "Search query"
    = submit "Search", class: "button hform__button"
  .field
    elixir:
      sort_fields = [
        "Sort by user ID": :id,
        "Sort by name": :name,
        "Sort by confirmation date": :confirmed_at,
        "Sort by last update date": :updated_at,
        "Sort by deactivation date": :deleted_at,
        "Sort by uploads": :uploads_count,
        "Sort by favorites": :images_favourited_count,
        "Sort by comments": :comments_posted_count,
        "Sort by votes": :votes_cast_count,
        "Sort by metadata updates": :metadata_updates_count,
        "Sort by forum posts": :forum_posts_count,
        "Sort by topics": :topic_count,
        "Sort by relevance": :_score
      ]

      sort_directions = [
        "Descending": :desc,
        "Ascending": :asc
      ]

    = select f, :usf, sort_fields, class: "input", name: "usf", autocomplete: "off", selected: @conn.params["usf"]
    = select f, :usd, sort_directions, class: "input input--separate-left", name: "usd", autocomplete: "off", selected: @conn.params["usd"]

=> link "Site staff", to: ~p"/admin/users?#{[uq: "NOT role:user"]}"
' &bull;
=> link "2FA users", to: ~p"/admin/users?#{[uq: "otp_required_for_login:true"]}"

h2 Search Results

= cond do
  - Enum.any?(@users) ->
    - route = fn p -> ~p"/admin/users?#{p}" end
    - pagination = render PhilomenaWeb.PaginationView, "_pagination.html", page: @users, route: route, conn: @conn, params: scope(@conn)

    = render PhilomenaWeb.Admin.UserView, "_list.html", users: @users, conn: @conn, pagination: pagination
  
  - assigns[:error] ->
    .block.block--fixed.block--danger
      ' Oops, there was an error parsing your query! Check for mistakes like mismatched parentheses. The error was:
    pre = assigns[:error]

  - true ->
    p
      ' No users found!

h3 Allowed fields
table.table
  thead
    tr
      th Field
      th Type
      th Description
      th Example
  tbody
    tr
      td Default
      td Literal
      td Matches either the name or email of the user.
      td
        code = link "administrator", to: ~p"/admin/users?#{[uq: "administrator"]}"
    tr
      td
        code id
      td Integer
      td Matches the user ID.
      td
        code = link "id:123", to: ~p"/admin/users?#{[uq: "id:123"]}"
    tr
      td
        code name
      td Literal
      td Matches the name of the user.
      td
        code = link "name:luna", to: ~p"/admin/users?#{[uq: "name:luna"]}"
    tr
      td
        code slug
      td Literal
      td Matches the slug of the user.
      td
        code = link "slug:princess+celestia", to: ~p"/admin/users?#{[uq: "slug:princess+celestia"]}"
    tr
      td
        code email
      td Literal
      td Matches the email of the user.
      td
        code = link "email:admin@example.com", to: ~p"/admin/users?#{[uq: "email:admin@example.com"]}"
    tr
      td
        code role
      td Literal
      td Matches the role of the user.
      td
        code = link "role:admin", to: ~p"/admin/users?#{[uq: "role:admin"]}"
    tr
      td
        code personal_title
      td Full Text
      td Matches the personal title of the user's profile.
      td
        code = link "personal_title:pony", to: ~p"/admin/users?#{[uq: "personal_title:pony"]}"
    tr
      td
        code description
      td Full Text
      td Matches the About Me section of the user's profile.
      td
        code = link "description:pony", to: ~p"/admin/users?#{[uq: "description:pony"]}"
    tr
      td
        code custom_avatar
      td Boolean
      td Matches whether the user has a custom avatar.
      td
        code = link "custom_avatar:true", to: ~p"/admin/users?#{[uq: "custom_avatar:true"]}"
    tr
      td
        code created_at
      td Date/Time
      td Matches the date and time the user account was created.
      td
        code = link "created_at.lt:2 weeks ago", to: ~p"/admin/users?#{[uq: "created_at.lt:2 weeks ago"]}"
    tr
      td
        code updated_at
      td Date/Time
      td Matches the date and time the user was last updated.
      td
        code = link "updated_at.gt:1 month ago", to: ~p"/admin/users?#{[uq: "updated_at.gt:1 month ago"]}"
    tr
      td
        code confirmed
      td Boolean
      td Matches whether the user account has been confirmed.
      td
        code = link "confirmed:true", to: ~p"/admin/users?#{[uq: "confirmed:true"]}"
    tr
      td
        code confirmed_at
      td Date/Time
      td Matches the date and time the user account was confirmed.
      td
        code = link "confirmed_at.lt:2 weeks ago", to: ~p"/admin/users?#{[uq: "confirmed_at.lt:2 weeks ago"]}"
    tr
      td
        code verified
      td Boolean
      td Matches whether the user has been granted verification.
      td
        code = link "verified:true", to: ~p"/admin/users?#{[uq: "verified:true"]}"
    tr
      td
        code locked
      td Boolean
      td Matches whether the user account has been locked.
      td
        code = link "locked:true", to: ~p"/admin/users?#{[uq: "locked:true"]}"
    tr
      td
        code locked_at
      td Date/Time
      td Matches the date and time the user account was locked.
      td
        code = link "locked_at:2025", to: ~p"/admin/users?#{[uq: "locked_at:2025"]}"
    tr
      td
        code deleted
      td Boolean
      td Matches whether the user account has been deactivated.
      td
        code = link "deleted:true", to: ~p"/admin/users?#{[uq: "deleted:true"]}"  
    tr
      td
        code deleted_at
      td Date/Time
      td Matches the date and time the user account was deactivated.
      td
        code = link "deleted_at.gt:1 week ago", to: ~p"/admin/users?#{[uq: "deleted_at.gt:1 week ago"]}"
    tr
      td
        code deleted_by_user_id
      td Numeric
      td Matches the user ID of the admin who deleted the user account.
      td
        code = link "deleted_by_user_id:123", to: ~p"/admin/users?#{[uq: "deleted_by_user_id:123"]}"
    tr
      td
        code deleted_by_user
      td Literal
      td Matches the name of the admin who deleted the user account.
      td
        code = link "deleted_by_user:moderator", to: ~p"/admin/users?#{[uq: "deleted_by_user:moderator"]}"
    tr
      td
        code banned_until
      td Date/Time
      td Matches the date and time of any enabled bans on the user.
      td
        code = link "banned_until.gt:0 seconds ago", to: ~p"/admin/users?#{[uq: "banned_until.gt:0 seconds ago"]}"
    tr
      td
        code otp_required_for_login
      td Boolean
      td Matches whether the user has two-factor authentication enabled.
      td
        code = link "otp_required_for_login:true", to: ~p"/admin/users?#{[uq: "otp_required_for_login:true"]}"
    tr
      td
        code uploads_count
      td Integer
      td Matches the number of uploads the user has made.
      td
        code = link "uploads_count.gte:200", to: ~p"/admin/users?#{[uq: "uploads_count.gte:200"]}"
    tr
      td
        code images_favourited_count
      td Integer
      td Matches the number of images the user has favourited.
      td
        code = link "images_favourited_count.gte:1000", to: ~p"/admin/users?#{[uq: "images_favourited_count.gte:1000"]}"
    tr
      td
        code votes_cast_count
      td Integer
      td Matches the number of votes the user has cast.
      td
        code = link "votes_cast_count.gte:1000", to: ~p"/admin/users?#{[uq: "votes_cast_count.gte:1000"]}"
    tr
      td
        code metadata_updates_count
      td Integer
      td Matches the number of metadata updates the user has made.
      td
        code = link "metadata_updates_count.gte:500", to: ~p"/admin/users?#{[uq: "metadata_updates_count.gte:500"]}"
    tr
      td
        code comments_posted_count
      td Integer
      td Matches the number of comments the user has posted.
      td
        code = link "comments_posted_count.gte:100", to: ~p"/admin/users?#{[uq: "comments_posted_count.gte:100"]}"
    tr
      td
        code forum_posts_count
      td Integer
      td Matches the number of forum posts the user has made.
      td
        code = link "forum_posts_count.gte:100", to: ~p"/admin/users?#{[uq: "forum_posts_count.gte:100"]}"
    tr
      td
        code topics_count
      td Integer
      td Matches the number of topics the user has made.
      td
        code = link "topics_count.gte:10", to: ~p"/admin/users?#{[uq: "topics_count.gte:10"]}"
    tr
      td
        code current_filter_id
      td Numeric
      td Matches the ID of the filter the user is currently using.
      td
        code = link "current_filter_id:123", to: ~p"/admin/users?#{[uq: "current_filter_id:123"]}"
    tr
      td
        code forced_filter_id
      td Numeric
      td Matches the ID of the filter that was forced on the user.
      td
        code = link "forced_filter_id:123", to: ~p"/admin/users?#{[uq: "forced_filter_id:123"]}"
    tr
      td
        code scratchpad
      td Full Text
      td Matches the moderation scratchpad content on the user's profile.
      td
        code = link "scratchpad:pony", to: ~p"/admin/users?#{[uq: "scratchpad:pony"]}"
    tr
      td
        code last_renamed_at
      td Date/Time
      td Matches the date and time the user was last renamed.
      td
        code = link "last_renamed_at.gt:1 month ago", to: ~p"/admin/users?#{[uq: "last_renamed_at.gt:1 month ago"]}"
    tr
      td
        code names
      td Literal
      td Matches previous names the user has had.
      td
        code = link "names:old_username", to: ~p"/admin/users?#{[uq: "names:old_username"]}"
